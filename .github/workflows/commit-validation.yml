name: Commit Validation
on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "docs/**"
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - "docs/**"
  workflow_dispatch:

jobs:
  formatting:
    if: ${{ (github.event_name != 'pull_request') || (github.event.pull_request.head.repo.fork) }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - run: npm ci
      - run: npm run lint
      - run: npm run format:ci

  build:
    if: ${{ (github.event_name != 'pull_request') || (github.event.pull_request.head.repo.fork) }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - run: npm ci
      - run: npm run compile

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/
          retention-days: 1

  test-matrix:
    runs-on: ubuntu-latest
    outputs:
      node-versions: ${{ steps.node.outputs.node-versions }}
      base-node-version: ${{ steps.node.outputs.base-node-version }}
    steps:
      - uses: actions/checkout@v4
      - id: node
        run: |
          BASE_NODE_VERSION=$(head -n 1 .nvmrc)
          PREV_NODE_VERSION=$((BASE_NODE_VERSION - 2))

          echo "node-versions=[$PREV_NODE_VERSION, $BASE_NODE_VERSION]" >> $GITHUB_OUTPUT
          echo "base-node-version=$BASE_NODE_VERSION" >> $GITHUB_OUTPUT

  tests-linux:
    needs: [build, test-matrix]
    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ fromJSON(needs.test-matrix.outputs.node-versions) }}
    uses: ./.github/workflows/tests-linux.yml
    with:
      node-version: ${{ fromJSON(matrix.node-version) }}
      base-node-version: ${{ fromJSON(needs.test-matrix.outputs.base-node-version) }}

  tests-windows:
    needs: [build, test-matrix]
    uses: ./.github/workflows/tests-windows.yml
    with:
      node-version: ${{ fromJSON(needs.test-matrix.outputs.base-node-version) }}

  # Run with most databases possible to provide the coverage of the tests
  coverage:
    runs-on: ubuntu-latest
    needs: [tests-linux, tests-windows]
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
